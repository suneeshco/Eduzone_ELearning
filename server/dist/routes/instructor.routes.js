"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const instructorController_1 = require("../controllers/instructorController/instructorController");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const orderController_1 = require("../controllers/orderController/orderController");
const studentController_1 = require("../controllers/studentController/studentController");
const router = (0, express_1.Router)();
router.post('/addCourse', auth_middleware_1.instructorAuth, instructorController_1.addCourse);
router.get('/getCourses/:id', auth_middleware_1.instructorAuth, instructorController_1.getCourses);
router.get('/getSingleCourse/:id', auth_middleware_1.instructorAuth, instructorController_1.getSingleCourse);
router.post('/addLesson', auth_middleware_1.instructorAuth, instructorController_1.addLesson);
router.get('/getLessons/:id', auth_middleware_1.instructorAuth, instructorController_1.getLessons);
router.get('/categories', auth_middleware_1.instructorAuth, instructorController_1.getActiveCategories);
router.put('/editCourse', auth_middleware_1.instructorAuth, instructorController_1.editCourse);
router.put('/updateProfile', auth_middleware_1.instructorAuth, instructorController_1.updateProfile);
router.get('/getInstructorDetails/:id', instructorController_1.getInstructorDetails);
router.get('/getLessonDetails/:id', auth_middleware_1.instructorAuth, instructorController_1.getLessonDetails);
router.put('/editLesson', auth_middleware_1.instructorAuth, instructorController_1.editLesson);
router.delete('/deleteLesson/:id', auth_middleware_1.instructorAuth, instructorController_1.deleteLesson);
router.patch('/instructorChangeImage', auth_middleware_1.instructorAuth, instructorController_1.instructorChangeImage);
router.get('/getOrderDetails', auth_middleware_1.instructorAuth, orderController_1.getOrderDetails);
router.get('/getSalesData/:id', auth_middleware_1.instructorAuth, orderController_1.getSalesDataInstructor);
router.get('/video', auth_middleware_1.authenticateInstructor, studentController_1.videoPlay);
router.get('/getAllRating', studentController_1.getAllRating);
router.get('/getAllEnrolledStudents', auth_middleware_1.instructorAuth, orderController_1.getAllEnrolledStudents);
exports.default = router;
